% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import.R
\name{import}
\alias{import}
\title{Statically import objects}
\usage{
import(dir = here::here("R/"), outfile = here::here("R/staticimports.R"))
}
\arguments{
\item{dir}{A directory containing .R files to scan for import declarations.}

\item{outfile}{File to write to. Defaults to R/staticimports.R in the current
project. Use \code{stdout()} to output to console.}
}
\description{
This function finds staticimports declarations and copies the objects to a
target file.

staticmports declartions are comment blocks that look like this:

\if{html}{\out{<div class="sourceCode">}}\preformatted{# @staticimports pkg:staticimports
#   map map_chr map_lgl os_name any_named any_unnamed
#   all_named all_unnamed
}\if{html}{\out{</div>}}

The \code{pkg:staticimports} means to import objects from the package named
\strong{staticimports}. If you use \code{pkg:mypackage}, it will import from
\strong{mypackage}.

On the following lines are the names of the objects to import.

The import declaration can also use a path. For example:

\if{html}{\out{<div class="sourceCode">}}\preformatted{# @staticimports ../mystaticexports
#   map map_chr map_lgl os_name any_named any_unnamed
#   all_named all_unnamed
}\if{html}{\out{</div>}}

If a relative path is used, it will be relative to the top-leve of this
project, as determined by \code{\link[here:here]{here::here()}}.

The statically imported objects are written a file, by default
\code{R/staticimports.R}.
}
